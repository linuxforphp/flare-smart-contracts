{
  "name": "flare-smart-contracts",
  "version": "0.0.1",
  "description": "Smart contracts implementing FTSO on Flare Network.",
  "main": "",
  "repository": {
    "type": "git",
    "url": "git+https://gitlab.com/flarenetwork/flare_smart_contracts.git"
  },
  "engines": {
    "node": ">=12 <20"
  },
  "author": "Flare SC team",
  "license": "MIT",
  "directories": {},
  "scripts": {
    "---------TEST---SCRIPTS": "",
    "test": "yarn hardhat test",
    "test-with-coverage": "env NODE_OPTIONS=\"--max_old_space_size=8192\" yarn hardhat coverage --solcoverjs ./.solcover.js --testfiles \"test/unit\"",
    "test-full-coverage": "env NODE_OPTIONS=\"--max_old_space_size=8192\" yarn hardhat coverage --solcoverjs ./.solcover.js --testfiles \"test\"",
    "cov": "yarn test-with-coverage && yarn coverage_reporter",
    "cov-int": "env NODE_OPTIONS=\"--max_old_space_size=8192\" yarn hardhat coverage --testfiles \"test/integration\"",
    "testHH": "env NODE_OPTIONS=\"--max_old_space_size=8192\" yarn test_unit_hh && yarn test_integration_hh && yarn test_performance_hh && yarn test_endtoend_hardhat",
    "test_unit_hh": "env TEST_PATH=./test/unit yarn hardhat test --network hardhat",
    "test_integration_hh": "env TEST_PATH=./test/integration yarn hardhat test --network hardhat",
    "test_system_scdev": "concurrently -r -k --success first \"yarn run_validator_scdev\" \"wait-on -d 2000 tcp:127.0.0.1:9650 && env TEST_PATH=./test/scdev/system yarn hardhat test --network scdev\"",
    "test_limitminting_scdev": "concurrently -r -k --success first \"yarn run_validator_scdev\" \"wait-on -d 2000 tcp:127.0.0.1:9650 && env CHAIN_CONFIG=scdev env TEST_PATH=./test/scdev/system yarn hardhat test --network scdev test/scdev/LimitMinting.ts\"",
    "test_minting_scdev": "concurrently -r -k --success first \"yarn run_validator_scdev\" \"wait-on -d 2000 tcp:127.0.0.1:9650 && env CHAIN_CONFIG=scdev env TEST_PATH=./test/scdev/system yarn hardhat test --network scdev test/scdev/Minting.ts\"",
    "test_priceprovider_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging TEST_PATH=./deployment/test yarn hardhat test --network staging ./deployment/test/priceSubmitter.ts",
    "test_endtoend_scdev": "concurrently -r -k --success first \"yarn run_validator_scdev\" \"wait-on -d 2000 tcp:127.0.0.1:9650 && yarn deploy_local_scdev && cat deployment/deploys/scdev.json | env TEST_PATH=./test/scdev/system yarn hardhat test --network scdev test/scdev/EndToEnd.ts\"",
    "test_airdrop_scdev": "concurrently -r -k --success first \"yarn run_validator_scdev\" \"wait-on -d 2000 tcp:127.0.0.1:9650 && env CHAIN_CONFIG=scdev yarn test test/scdev/Airdrop.ts --network scdev\"",
    "test_endtoend_hardhat": "env NODE_OPTIONS=\"--max_old_space_size=8192\" concurrently -r -k --success first \"yarn hardhat node > nul\" \"wait-on http://127.0.0.1:8545 && yarn deploy_local_hardhat_commands && cat ./deployment/deploys/hardhat.json | env TEST_PATH=./test/hardhat/system yarn hardhat test --network localhost test/hardhat/system/EndToEnd.ts\"",
    "test_endtoend_hardhat_fast": "concurrently -r -k --success first \"yarn hardhat node > nul\" \"wait-on http://127.0.0.1:8545 && yarn deploy_local_hardhat_commands_fast && cat ./deployment/deploys/hardhat.json | env TEST_PATH=./test/hardhat/system yarn hardhat test --network localhost test/hardhat/system/EndToEnd.ts\"",
    "test_claim_topup_hardhat": "env NODE_OPTIONS=\"--max_old_space_size=8192\" concurrently -r -k --success first \"yarn hardhat node > nul\" \"wait-on http://127.0.0.1:8545 && env CHAIN_CONFIG=endToEndHardhat | yarn deploy_local_hardhat_commands && cat ./deployment/deploys/hardhat.json | env TEST_PATH=./test/hardhat/system yarn hardhat test --network localhost test/hardhat/system/ClaimTopup.ts\"",
    "test_claim_topup_hardhat_fast": "concurrently -r -k --success first \"yarn hardhat node > nul\" \"wait-on http://127.0.0.1:8545 && env CHAIN_CONFIG=endToEndHardhat | yarn deploy_local_hardhat_commands_fast && cat ./deployment/deploys/hardhat.json | env TEST_PATH=./test/hardhat/system yarn hardhat test --network localhost test/hardhat/system/ClaimTopup.ts\"",
    "test_redeploy_hardhat_fast": "concurrently -r -k --success first \"yarn hardhat node > nul\" \"wait-on http://127.0.0.1:8545 && yarn deploy_local_hardhat_commands_fast && yarn redeploy_contracts_local_hardhat\"",
    "test_endtoend_gas_fast": "concurrently -r -k --success first \"yarn hardhat node > nul\" \"wait-on http://127.0.0.1:8545 && env CHAIN_CONFIG=endToEndHardhat | yarn deploy_local_hardhat_commands_fast && cat ./deployment/deploys/hardhat.json | env TEST_PATH=./test/hardhat/system yarn hardhat test --network localhost test/hardhat/system/ClaimingGasReport.ts\"",
    "test_performance_hh": "env TEST_PATH=./test/performance yarn hardhat test --network hardhat",
    "test_fuzzing_hh": "./scripts/test-fuzzing.sh",
    "compare_state_connector_file_to_flare_repo": "curl https://gitlab.com/flarenetwork/flare/-/raw/master/src/stateco/StateConnector.sol > /tmp/StateConnector.sol && diff contracts/genesis/implementation/StateConnector.sol /tmp/StateConnector.sol > /dev/null",
    "coverage_reporter": "yarn ts-node test/coverage/coverageReporter.ts",
    "run_validator_scdev": "docker run --init --rm --name flare-validator-scdev -p 127.0.0.1:9650:9650/tcp itsflareccb/flare-validator-scdev",
    
    "---------TEST---SCRIPTS-EXPERIMENTAL": "",
    "test_timeshift": "env VM_FLARE_TEST=shift yarn hardhat test --network scdev",
    "test_timeshift_help": "echo 'Run tests with time shifts in VM'",
    "test_timewait": "env VM_FLARE_TEST=real yarn hardhat test --network scdev",
    "test_timewait_help": "echo 'Run tests with actual delays'",
    "test_fuzzing_token": "yarn hardhat test --network hardhat test/fuzzing/token/VPTokenFuzzing.ts",
    "test_fuzzing_endtoend": "yarn hardhat test --network hardhat test/fuzzing/endtoend/EndToEndFuzzing.ts",
    "eslint": "eslint . --ext .ts",
    
    "---------DEPLOY---TEST---SCRIPTS": "",
    "test_deploy_local_scdev": "cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev TEST_PATH=./deployment/test yarn --silent hardhat test --no-compile --network scdev ./deployment/test/deploy-contracts.ts",
    "test_daemonize_local_scdev": "cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev TEST_PATH=./deployment/test yarn hardhat test --no-compile --network scdev ./deployment/test/daemonize-contracts.ts",
    "test_activate_managers_local_scdev": "cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev TEST_PATH=./deployment/test yarn hardhat test --no-compile --network scdev ./deployment/test/activate-managers.ts",
    "test_switch_to_production_mode_local_scdev": "cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev TEST_PATH=./deployment/test yarn hardhat test --no-compile --network scdev ./deployment/test/switch-to-production-mode.ts",
    "test_final_verification_local_scdev": "cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev TEST_PATH=./deployment/test yarn hardhat test --no-compile --network scdev ./deployment/test/final-verification.ts",
    
    "test_deploy_network_songbird": "cat deployment/deploys/songbird.json | env CHAIN_CONFIG=songbird TEST_PATH=./deployment/test yarn --silent hardhat test --no-compile --network songbird ./deployment/test/deploy-contracts.ts",
    "test_daemonize_network_songbird": "cat deployment/deploys/songbird.json | env CHAIN_CONFIG=songbird TEST_PATH=./deployment/test yarn hardhat test --no-compile --network songbird ./deployment/test/daemonize-contracts.ts",
    "test_activate_managers_network_songbird": "cat deployment/deploys/songbird.json | env CHAIN_CONFIG=songbird TEST_PATH=./deployment/test yarn hardhat test --no-compile --network songbird ./deployment/test/activate-managers.ts",
    "test_switch_to_production_mode_network_songbird": "cat deployment/deploys/songbird.json | env CHAIN_CONFIG=songbird TEST_PATH=./deployment/test yarn hardhat test --no-compile --network songbird ./deployment/test/switch-to-production-mode.ts",
    "test_transfer_gov_working_balance_network_songbird": "env CHAIN_CONFIG=songbird TEST_PATH=./deployment/test yarn hardhat test --no-compile --network songbird ./deployment/test/transfer-gov-working-balance.ts",
    "test_final_verification_network_songbird": "cat deployment/deploys/songbird.json | env CHAIN_CONFIG=songbird TEST_PATH=./deployment/test yarn hardhat test --no-compile --network songbird ./deployment/test/final-verification.ts",
    
    "test_deploy_network_flare": "cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare TEST_PATH=./deployment/test yarn --silent hardhat test --no-compile --network flare ./deployment/test/deploy-contracts.ts",
    "test_daemonize_network_flare": "cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare TEST_PATH=./deployment/test yarn hardhat test --no-compile --network flare ./deployment/test/daemonize-contracts.ts",
    "test_activate_managers_network_flare": "cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare TEST_PATH=./deployment/test yarn hardhat test --no-compile --network flare ./deployment/test/activate-managers.ts",
    "test_switch_to_production_mode_network_flare": "cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare TEST_PATH=./deployment/test yarn hardhat test --no-compile --network flare ./deployment/test/switch-to-production-mode.ts",
    "test_transfer_gov_working_balance_network_flare": "env CHAIN_CONFIG=flare TEST_PATH=./deployment/test yarn hardhat test --no-compile --network flare ./deployment/test/transfer-gov-working-balance.ts",
    "test_final_verification_network_flare": "cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare TEST_PATH=./deployment/test yarn hardhat test --no-compile --network flare ./deployment/test/final-verification.ts",
    
    "test_deploy_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging TEST_PATH=./deployment/test yarn hardhat test --network staging ./deployment/test/deploy-contracts.ts",
    "test_daemonize_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging TEST_PATH=./deployment/test yarn hardhat test --no-compile --network staging ./deployment/test/daemonize-contracts.ts",
    "test_activate_managers_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging TEST_PATH=./deployment/test yarn hardhat test --no-compile --network staging ./deployment/test/activate-managers.ts",
    "test_switch_to_production_mode_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging TEST_PATH=./deployment/test yarn hardhat test --no-compile --network staging ./deployment/test/switch-to-production-mode.ts",
    "test_final_verification_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging TEST_PATH=./deployment/test yarn hardhat test --no-compile --network staging ./deployment/test/final-verification.ts",
    
    "test_deploy_hardhat": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat TEST_PATH=./deployment/test yarn hardhat test --no-compile --network localhost ./deployment/test/deploy-contracts.ts",
    "test_daemonize_hardhat": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat TEST_PATH=./deployment/test yarn hardhat test --no-compile --network localhost ./deployment/test/daemonize-contracts.ts",
    "test_activate_managers_hardhat": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat TEST_PATH=./deployment/test yarn hardhat test --no-compile --network localhost ./deployment/test/activate-managers.ts",
    "test_switch_to_production_mode_hardhat": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat TEST_PATH=./deployment/test yarn hardhat test --no-compile --network localhost ./deployment/test/switch-to-production-mode.ts",
    "test_transfer_gov_working_balance_hardhat": "env CHAIN_CONFIG=endToEndHardhat TEST_PATH=./deployment/test yarn hardhat test --no-compile --network localhost ./deployment/test/transfer-gov-working-balance.ts",
    
    "---------AIRDROP---SCRIPTS": "",
    "-----------SONGBIRD": "",
    "test_initial_airdrop_state_songbird": "yarn test deployment/test/songbird/initialVerificationTest.ts",
    "create_airdrop_transactions_songbird": "yarn ts-node -r dotenv/config airdrop/songbird/createAirdropTransactions.ts --snapshot-file airdrop/songbird/data/export.csv --transaction-file airdrop/songbird/files/trans/unsigned_transactions.json --override -h true -i 19",
    "sign_airdrop_transactions_songbird": "yarn ts-node -r dotenv/config airdrop/songbird/signAirdropTransactions.ts -f airdrop/songbird/files/trans/unsigned_transactions.json -o airdrop/songbird/files/trans/signed_transactions.json",
    "send_airdrop_transactions_songbird": "yarn ts-node -r dotenv/config airdrop/songbird/sendAirdropTransactions.ts -f airdrop/songbird/files/trans/signed_transactions.json",
    "test_final_airdrop_state_songbird": "yarn test deployment/test/songbird/airdropDataTest.ts",
    "songbird_airdrop": "yarn test_initial_airdrop_state_songbird && yarn create_airdrop_transactions_songbird && yarn sign_airdrop_transactions_songbird && yarn send_airdrop_transactions_songbird && yarn test_final_airdrop_state_songbird",
    
    "-----------FLARE": "",
    "test_initial_airdrop_state_mainnet": "yarn test deployment/test/flare/initialVerificationTest.ts",
    "create_airdrop_transactions_mainnet": "yarn ts-node -r dotenv/config airdrop/flare/createAirdropTransactions.ts --snapshot-file airdrop/flare/data/export.csv --transaction-file airdrop/flare/files/trans/unsigned_call_transactions.json --override -h true -d deployment/deploys/flare.json --deployment-config deployment/chain-config/flare.json --gas-price 50000000000 -i 14",
    "sign_airdrop_transactions_mainnet": "yarn ts-node -r dotenv/config airdrop/flare/signAirdropTransactions.ts -f airdrop/flare/files/trans/unsigned_call_transactions.json -o airdrop/flare/files/trans/signed_call_transactions.json",
    "send_airdrop_transactions_mainnet": "yarn ts-node -r dotenv/config airdrop/flare/sendAirdropTransactions.ts -f airdrop/flare/files/trans/signed_call_transactions.json",
    "test_middle_airdrop_state_mainnet": "yarn test deployment/test/flare/airdropMiddleDataTest.ts",
    "disable_airdrop_mainnet": "yarn ts-node -r dotenv/config airdrop/flare/disableAirdrop.ts -d deployment/deploys/flare.json --deployment-config deployment/chain-config/flare.json --gas-price 50000000000 -i 14",
    "test_final_airdrop_state_mainnet": "yarn test deployment/test/flare/airdropDataTest.ts",
    "flare_airdrop": "yarn test_initial_airdrop_state_mainnet && yarn create_airdrop_transactions_mainnet && yarn sign_airdrop_transactions_mainnet && yarn send_airdrop_transactions_mainnet && yarn test_middle_airdrop_state_mainnet && yarn disable_airdrop_mainnet && yarn test_final_airdrop_state_mainnet",

    "create_initial_airdrop_transactions_update_mainnet": "yarn ts-node -r dotenv/config airdrop/flare/createAirdropTransactions.ts --snapshot-file airdrop/flare/data/export.csv --transaction-file airdrop/flare/files/trans/unsigned_call_transactions.json --override -h true -d deployment/deploys/flare.json --deployment-config deployment/chain-config/flare.json --gas-price 50000000000 -i 14 --batch-size 20",

    "flare_tde": "yarn ts-node -r dotenv/config airdrop/flare/distributeInitialAirdrop.ts -i 14",

    "---------DEPLOY---SCRIPTS": "",
    "deploy_local_scdev": "yarn deploy_contracts_local_scdev && yarn daemonize_contracts_local_scdev && yarn activate_managers_local_scdev && yarn switch_to_production_mode_local_scdev && yarn test_final_verification_local_scdev",
    "switch_to_production_mode_local_scdev": "cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev switch-to-production-mode && yarn test_switch_to_production_mode_local_scdev",
    "claim_governance_local_scdev": "cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev yarn hardhat --network scdev claim-governance",
    "propose_governance_local_scdev": "cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev propose-governance",
    "activate_managers_local_scdev": "cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev activate-managers && yarn test_activate_managers_local_scdev",
    "daemonize_contracts_local_scdev": "cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev daemonize-contracts && yarn test_daemonize_local_scdev",
    "deploy_contracts_local_scdev": "yarn compile && yarn --silent hardhat --network scdev link-contracts && yarn hardhat compile --config hardhat-link.config.ts --force && env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev deploy-contracts > ./deployment/deploys/scdev.json && yarn test_deploy_local_scdev",
    
    "deploy_network_songbird": "yarn deploy_contracts_network_songbird && yarn daemonize_contracts_network_songbird && yarn activate_managers_network_songbird && yarn switch_to_production_mode_network_songbird && yarn test_final_verification_network_songbird",
    "transfer_gov_working_balance_network_songbird": "env CHAIN_CONFIG=songbird yarn --silent hardhat --network songbird transfer-gov-working-balance && yarn test_transfer_gov_working_balance_network_songbird",
    "claim_governance_network_songbird": "cat deployment/deploys/songbird.json | env CHAIN_CONFIG=songbird yarn --silent hardhat --network songbird claim-governance",
    "switch_to_production_mode_network_songbird": "cat deployment/deploys/songbird.json | env CHAIN_CONFIG=songbird yarn --silent hardhat --network songbird switch-to-production-mode && yarn test_switch_to_production_mode_network_songbird",
    "propose_governance_network_songbird": "cat deployment/deploys/songbird.json | env CHAIN_CONFIG=songbird yarn --silent hardhat --network songbird propose-governance",
    "activate_managers_network_songbird": "cat deployment/deploys/songbird.json | env CHAIN_CONFIG=songbird yarn --silent hardhat --network songbird activate-managers && yarn test_activate_managers_network_songbird",
    "daemonize_contracts_network_songbird": "cat deployment/deploys/songbird.json | env CHAIN_CONFIG=songbird yarn --silent hardhat --network songbird daemonize-contracts && yarn test_daemonize_network_songbird",
    "deploy_contracts_network_songbird": "yarn compile && env CHAIN_CONFIG=songbird yarn --silent hardhat --network songbird deploy-contracts > ./deployment/deploys/songbird.json && yarn test_deploy_network_songbird",
    
    "deploy_network_flare": "yarn deploy_contracts_network_flare && yarn daemonize_contracts_network_flare && yarn activate_managers_network_flare && yarn switch_to_production_mode_network_flare && yarn test_final_verification_network_flare",
    "transfer_gov_working_balance_network_flare": "env CHAIN_CONFIG=flare yarn --silent hardhat --network flare transfer-gov-working-balance && yarn test_transfer_gov_working_balance_network_flare",
    "claim_governance_network_flare": "cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare yarn --silent hardhat --network flare claim-governance",
    "switch_to_production_mode_network_flare": "cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare yarn --silent hardhat --network flare switch-to-production-mode && yarn test_switch_to_production_mode_network_flare",
    "propose_governance_network_flare": "cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare yarn --silent hardhat --network flare propose-governance",
    "activate_managers_network_flare": "cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare yarn --silent hardhat --network flare activate-managers && yarn test_activate_managers_network_flare",
    "daemonize_contracts_network_flare": "cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare yarn --silent hardhat --network flare daemonize-contracts && yarn test_daemonize_network_flare",
    "deploy_contracts_network_flare": "yarn compile && yarn --silent hardhat --network flare link-contracts && yarn hardhat compile --config hardhat-link.config.ts --force && env CHAIN_CONFIG=flare yarn --silent hardhat --network flare deploy-contracts > ./deployment/deploys/flare.json && yarn test_deploy_network_flare",
    
    "deploy_network_staging": "yarn deploy_contracts_network_staging && yarn daemonize_contracts_network_staging && yarn activate_managers_network_staging && yarn switch_to_production_mode_network_staging && yarn test_final_verification_network_staging",
    "switch_to_production_mode_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging yarn --silent hardhat --network staging switch-to-production-mode && yarn test_switch_to_production_mode_network_staging",
    "claim_governance_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging yarn --silent hardhat --network staging claim-governance",
    "propose_governance_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging yarn --silent hardhat --network staging propose-governance",
    "activate_managers_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging yarn --silent hardhat --network staging activate-managers && yarn test_activate_managers_network_staging",
    "daemonize_contracts_network_staging": "cat deployment/deploys/staging.json | env CHAIN_CONFIG=staging yarn --silent hardhat --network staging daemonize-contracts && yarn test_daemonize_network_staging",
    "deploy_contracts_network_staging": "yarn compile && yarn --silent hardhat --network staging link-contracts && yarn hardhat compile --config hardhat-link.config.ts --force && env CHAIN_CONFIG=staging yarn --silent hardhat --network staging deploy-contracts > ./deployment/deploys/staging.json && yarn test_deploy_network_staging",
    
    "deploy_local_hardhat": "concurrently -r -k --success last \"yarn hardhat node > nul\" \"wait-on http://127.0.0.1:8545 && yarn typechain-ethers-v5 && yarn typechain-truffle-v5 && yarn deploy_local_hardhat_commands\"",
    "deploy_local_hardhat_commands": "yarn deploy_contracts_local_hardhat && yarn daemonize_contracts_local_hardhat && yarn activate_managers_local_hardhat && yarn switch_to_production_mode_local_hardhat",
    "transfer_gov_working_balance_local_hardhat": "env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost transfer-gov-working-balance && yarn test_transfer_gov_working_balance_hardhat",
    "switch_to_production_mode_local_hardhat": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost switch-to-production-mode && yarn test_switch_to_production_mode_hardhat",
    "claim_governance_local_hardhat": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost claim-governance",
    "propose_governance_local_hardhat": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost propose-governance",
    "activate_managers_local_hardhat": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost activate-managers && yarn test_activate_managers_hardhat",
    "daemonize_contracts_local_hardhat": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost daemonize-contracts && yarn test_daemonize_hardhat",
    "deploy_contracts_local_hardhat": "yarn --silent hardhat --network localhost link-contracts && yarn hardhat compile --config hardhat-link.config.ts --force && env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost deploy-contracts > ./deployment/deploys/hardhat.json && yarn test_deploy_hardhat",

    "deploy_contracts_network_flare_governance": "yarn compile && cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare yarn --silent hardhat --network flare deploy-contracts-governance > ./deployment/deploys/flare_governance.json",
    
    "---------REDEPLOY---SCRIPTS": "",
    "redeploy_contracts_local_hardhat": "yarn compile && cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost redeploy-contracts > ./deployment/deploys/hardhat_redeploy.json",
    "redeploy_contracts_local_scdev": "yarn compile && cat deployment/deploys/scdev.json | env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev redeploy-contracts > ./deployment/deploys/scdev_redeploy.json",
    "redeploy_contracts_network_flare": "yarn compile && cat deployment/deploys/flare.json | env CHAIN_CONFIG=flare yarn --silent hardhat --network flare redeploy-contracts > ./deployment/deploys/flare_redeploy.json",
    "redeploy_contracts_network_coston2": "yarn compile && cat deployment/deploys/coston2.json | env CHAIN_CONFIG=coston2 yarn --silent hardhat --network coston2 redeploy-contracts > ./deployment/deploys/coston2_redeploy.json",
    
    "---------FAST---SCRIPTS---SKIP---DEPLOY---TESTS": "",
    "deploy_local_hardhat_commands_fast": "yarn deploy_contracts_local_hardhat_fast && yarn daemonize_contracts_local_hardhat_fast && yarn activate_managers_local_hardhat_fast && yarn switch_to_production_mode_local_hardhat_fast",
    "activate_managers_local_hardhat_fast": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost activate-managers",
    "daemonize_contracts_local_hardhat_fast": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost daemonize-contracts",
    "deploy_contracts_local_hardhat_fast": "yarn --silent hardhat --network localhost link-contracts && yarn hardhat compile --config hardhat-link.config.ts --force && env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost deploy-contracts > ./deployment/deploys/hardhat.json",
    "switch_to_production_mode_local_hardhat_fast": "cat deployment/deploys/hardhat.json | env CHAIN_CONFIG=endToEndHardhat yarn --silent hardhat --network localhost switch-to-production-mode",
    
    "---------UNREGISTER---SCRIPTS": "",
    "unregister_local_scdev": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev undaemonize-contracts",
    "unregister_network_staging": "env CHAIN_CONFIG=staging yarn --silent hardhat --network staging undaemonize-contracts",
    
    "---------COMPILE---SCRIPTS": "",
    "compile": "yarn hardhat compile --config hardhatSetup.config.ts && yarn typechain-ethers-v5 && yarn typechain-truffle-v5 && yarn typechain-web3-v1",
    "c": "yarn compile",
    "lint": "yarn solhint \"contracts/**/*.sol\"",
    "typechain-ethers-v5": "yarn typechain --target=ethers-v5 --out-dir typechain \"artifacts/!(build-info)/**/+([a-zA-Z0-9_]).json\" 1> nul",
    "typechain-truffle-v5": "yarn typechain --target=truffle-v5 --out-dir typechain-truffle \"artifacts/!(build-info)/**/+([a-zA-Z0-9_]).json\" 1> nul",
    "typechain-web3-v1": "yarn typechain --target=web3-v1 --out-dir typechain-web3 \"artifacts/!(build-info)/**/+([a-zA-Z0-9_]).json\" 1> nul",
    "size": "yarn run hardhat size-contracts --config hardhatSetup.config.ts",
    "flatten": "yarn hardhat flatten",
    "slither": "pip3 install slither-analyzer && rm -f ./slither.json && rm -f ./slither_badge.json 2> /dev/null; slither . --json=./slither.json 2> /dev/null || true; node scripts/slither-parse.js ./slither.json",
    "slither-show-stderr": "pip3 install slither-analyzer && rm -f ./slither.json && rm -f ./slither_badge.json 2> /dev/null; slither . --json=./slither.json || true; node scripts/slither-parse.js ./slither.json",
    "gas-report-check": "./scripts/gas-report-check.sh",
    "generate-parameter-schema": "typescript-json-schema deployment/chain-config/chain-parameters.ts ChainParameters -o deployment/chain-config/chain-parameters.json --noExtraProps --required --strictNullChecks",
    
    "---------INFO---SCRIPTS": "",
    "gas-snapshot": "env CI=true yarn testHH; yarn gas-report",
    "gas-report": "ts-node scripts/process-gas-report.ts && cat .gas-report.txt",
    "gas": "cat .gas-report.txt",
    
    "---------HELPER---SCRIPTS": "",
    "accounts": "ts-node scripts/generate-accounts.ts",
    "go-accounts": "ts-node ./scripts/generate-addresses-for-go.ts",
    
    "---------BADGES---SCRIPTS": "",
    "poslint": "yarn ts-node -r dotenv/config scripts/solhint_badge.ts",
    "posslither": "yarn ts-node -r dotenv/config scripts/slither_badge.ts",
    
    "---------VM-(MULTIPASS)-MANGEMENT--SCRIPTS": "",
    "vm_launch": "./scripts/local-flare-chain-vm/launch.sh",
    "vm_shell": "multipass shell flare",
    "vm_start": "multipass start flare",
    "vm_stop": "multipass stop flare",
    "vm_purge": "multipass delete flare; multipass purge",
    
    "---------OLD-GENESIS-FILE-GENERATION--SCRIPTS": "",
    "generate_genesis_songbird": "yarn ts-node deployment/genesis/songbird/songbird-genesis-generate.ts",
    "test_genesis_accounts_scdev": "env TEST_PATH=./deployment/genesis/songbird yarn hardhat test --network scdev deployment/genesis/songbird/songbird-genesis-accounts-test.ts",
    "test_genesis_accounts_songbird": "env TEST_PATH=./deployment/genesis/songbird yarn hardhat test --network songbird deployment/genesis/songbird/songbird-genesis-accounts-test.ts",
    
    "---------GENESIS-FILE-GENERATION--SCRIPTS": "",
    "genesis_json": "yarn ts-node deployment/genesis_gen/prepare-genesis-json.ts",
    "genesis_json_flare": "yarn ts-node deployment/genesis_gen/prepare-genesis-json.ts -n flare",
    "generate_genesis_flare": "yarn ts-node deployment/genesis/flare/flare-genesis-generate.ts"
  },
  "dependencies": {
    "@openzeppelin/contracts": "3.4.0",
    "@tenderly/hardhat-tenderly": "1.0.12",
    "@typescript-eslint/eslint-plugin": "4.28.3",
    "@typescript-eslint/parser": "4.28.3",
    "axios": "0.25.0",
    "cli-progress": "3.9.0",
    "csv": "5.5.0",
    "dotenv": "8.2.0",
    "eslint": "7.30.0",
    "ethereum-tx-decoder": "3.0.0",
    "got": "11.8.2",
    "hardhat": "2.4.3",
    "solhint": "3.3.2",
    "solidity-coverage": "0.7.16",
    "solidity-docgen": "0.6.0-beta.34",
    "typescript-json-schema": "0.54.0"
  },
  "devDependencies": {
    "@gnosis.pm/mock-contract": "4.0.0",
    "@nomiclabs/hardhat-ethers": "2.0.2",
    "@nomiclabs/hardhat-truffle5": "2.0.0",
    "@nomiclabs/hardhat-waffle": "2.0.1",
    "@nomiclabs/hardhat-web3": "2.0.0",
    "@openzeppelin/contracts": "3.4.0",
    "@openzeppelin/test-helpers": "0.5.11",
    "@typechain/ethers-v5": "7.0.0",
    "@typechain/hardhat": "2.0.1",
    "@typechain/truffle-v5": "5.0.0",
    "@typechain/web3-v1": "3.0.0",
    "@types/chai": "4.2.18",
    "@types/mocha": "8.2.2",
    "@types/node": "15.12.1",
    "@types/yargs": "17.0.8",
    "@types/elliptic": "6.4.14",
    "bech32": "2.0.0",
    "chai": "4.3.4",
    "concurrently": "6.2.0",
    "ethereum-waffle": "3.3.0",
    "ethereumjs-wallet": "1.0.1",
    "ethers": "5.3.0",
    "hardhat-contract-sizer": "2.0.3",
    "hardhat-deploy": "0.7.10",
    "hardhat-gas-reporter": "1.0.4",
    "intercept-stdout": "0.1.2",
    "openpgp": "5.0.0",
    "pascal-case": "3.1.2",
    "random-number-csprng": "1.0.2",
    "ripple-lib": "1.9.7",
    "truffle-assertions": "0.9.2",
    "ts-generator": "0.1.1",
    "ts-node": "10.0.0",
    "typechain": "5.0.0",
    "typescript": "4.3.2",
    "wait-on": "5.3.0",
    "yargs": "17.3.1",
    "yarn-audit-fix": "6.2.2",
    "elliptic": "6.5.4",
    "ethereumjs-util": "7.1.5"
  }
}
