### Stages
## Temporary revert to run pipeline
stages:
    - test

### Variables
variables:
    TEST_UNIT: "test_unit_hh"
    TEST_INTEGRATION: "test_integration_hh"
    TEST_PERFORMANCE: "test_performance_hh"
    TEST_END_TO_END: "test_endtoend_hardhat"
    DEPLOYER_PRIVATE_KEY: "0xc5e8f61d1ab959b397eecc0a37a6517b8e67a0e7cf1f4bce5591f3ed80199122"
    GENESIS_GOVERNANCE_PRIVATE_KEY: "0x50777f5a3ce16445e63411bf1e865a2a11d5ca3c4cbc1de00808a52180bd8d3c"
    GOVERNANCE_PRIVATE_KEY: "0xd49743deccbccc5dc7baa8e69e5be03298da8688a15dd202e20f15d5e0e9a9fb"
    TEST_LINTER: "lint"
    TEST_STATE_CONNECTOR_FILES: "compare_state_connector_file_to_flare_repo"
    YARN_CACHE_DIR: "$CI_PROJECT_DIR/.yarn-cache"

cache:
    - key: always-keep
      paths:
        - $YARN_CACHE_DIR
      policy: pull
    - key:
        files:
            - yarn.lock
      paths:
        - $CI_PROJECT_DIR/node_modules
      policy: pull

# prevent running duplicate (branch and merge request) pipelines when MR is open
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
    
### Templates

# only run jobs automatically for master barnch push-es
.pipeline-settings: &pipeline-settings
    rules:
        - if: '$CI_BRANCH_NAME == "master"'
          when: on_success
        - when: manual

.yarn-setup: &yarn-setup
    image: node:latest
    <<: *pipeline-settings
    before_script:
        - yarn install --frozen-lockfile --cache-folder $YARN_CACHE_DIR
        
### Jobs
test-contract-unit-1:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - env TEST_PATH=./test/unit/ftso/lib yarn hardhat test --network hardhat
        - env TEST_PATH=./test/unit/ftso/priceProviderDummyContracts yarn hardhat test --network hardhat
        - yarn hardhat test --network hardhat test/unit/ftso/implementation/Ftso.ts

test-contract-unit-2:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - yarn hardhat test --network hardhat test/unit/ftso/implementation/FtsoManager.ts
        - yarn hardhat test --network hardhat test/unit/ftso/implementation/FTSOMedian.ts

test-contract-unit-3:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - env TEST_PATH=./test/unit/tokenPools yarn hardhat test --network hardhat
        - env TEST_PATH=./test/unit/governance yarn hardhat test --network hardhat

test-contract-unit-4:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - yarn $TEST_STATE_CONNECTOR_FILES
        - env TEST_PATH=./test/unit/genesis yarn hardhat test --network hardhat
        - env TEST_PATH=./test/unit/adversary yarn hardhat test --network hardhat
        - env TEST_PATH=./test/unit/Xasset yarn hardhat test --network hardhat
        - env TEST_PATH=./test/unit/inflation yarn hardhat test --network hardhat

test-contract-unit-5:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - env TEST_PATH=./test/unit/token yarn hardhat test --network hardhat

test-contract-unit-6:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - yarn $TEST_LINTER
        - env TEST_PATH=./test/unit/utils yarn hardhat test --network hardhat

test-contract-integration:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - yarn $TEST_INTEGRATION

test-fuzzing-token:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - yarn test_fuzzing_token

test-fuzzing-token-cleanup-block:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - env CLEANUP_BLOCK=1500 SET_CLEANUP_BLOCK_AT=2100 yarn test_fuzzing_token

test-fuzzing-token-repl-vpcontract:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - env REPLACE_VPCONTRACT_AT=1100 SPLIT_VPCONTRACTS_BLOCKS=500 yarn test_fuzzing_token

test-contract-performance:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - yarn $TEST_PERFORMANCE

test-contract-end-to-end:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - yarn $TEST_END_TO_END

slither-check:
    stage: test
    image: node:latest
    <<: *pipeline-settings
    before_script:
        - apt update
        - apt install -y python3-pip
        - pip3 install slither-analyzer
        - yarn install --frozen-lockfile --cache-folder $YARN_CACHE_DIR
    script:
        - yarn slither
    cache:  # only save cache here
        - key: always-keep
          paths:
            - $YARN_CACHE_DIR
          policy: pull-push
        - key:
            files:
                - yarn.lock
          paths:
            - $CI_PROJECT_DIR/node_modules
          policy: pull-push

gas-report:
    stage: test
    <<: *yarn-setup
    script:
        - yarn c
        - env TEST_PATH=./test/unit/gasReport yarn hardhat test --network hardhat
#        - yarn gas-report-check
