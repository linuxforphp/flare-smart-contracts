# This script generates an index file with links and descriptions for the
# specified contracts, updates the mkdocs.yml file in the docs repository,
# and finally commits and pushes the changes to the docs repository.
#
# Remember to run first: yarn && yarn compile && yarn hardhat docgen
#
# Run from the repo root!

contracts="
addressUpdater/implementation/AddressUpdatable.md
addressUpdater/implementation/AddressUpdater.md
token/implementation/CheckPointable.md
token/implementation/CleanupBlockNumberManager.md
token/implementation/Delegatable.md
utils/implementation/FlareContractRegistry.md
genesis/implementation/GovernanceSettings.md
token/implementation/GovernanceVotePower.md
governance/implementation/Governed.md
governance/implementation/GovernedBase.md
token/implementation/VPContract.md
token/implementation/VPToken.md
token/implementation/WNat.md
userInterfaces/IFlareContractRegistry.md
userInterfaces/IGovernanceSettings.md
userInterfaces/IGovernanceVotePower.md
userInterfaces/IVPContractEvents.md
userInterfaces/IVPToken.md
userInterfaces/IWNat.md
addressUpdater/interface/IIAddressUpdatable.md
addressUpdater/interface/IIAddressUpdater.md
token/interface/IICleanable.md
token/interface/IIGovernanceVotePower.md
token/interface/IIVPContract.md
token/interface/IIVPToken.md
"
docs=docs-repo/docs/apis/smart-contracts

cd docs/api
sc_commit=$(git rev-parse --short HEAD)

# Temporarily clone the docs repo here
rm -rf docs-repo
git clone --depth 1 --single-branch --branch api-reference git@github.com:flare-foundation/docs-private.git docs-repo
mkdir -p $docs

# Generate index.md
echo "# Smart Contracts API" > $docs/index.md
echo >> $docs/index.md
echo "<!-- This is an autogenerated file. Do not edit! -->" >> $docs/index.md
echo >> $docs/index.md
echo "List of Flare smart contracts." >> $docs/index.md
echo >> $docs/index.md
echo "| Name | Description |" >> $docs/index.md
echo "| ---- | ----------- |" >> $docs/index.md
for f in $contracts;
do
    name=$(sed -n '2 s/title: //p' $f)
    # Get the 15th line of the contract md file, where the description lies.
    description=$(sed '15q;d' $f)
    # If the description starts with <, the contract has no description.
    [[ $description = "</div>" ]] && description=""
    echo "| [\`$name\`](./$name.md) | $description |" >> $docs/index.md
done
echo >> $docs/index.md
echo "<style>td:first-child {white-space: nowrap;}</style>" >> $docs/index.md

# Generate mkdocs.yml entries
# Remove all lines below "Smart Contracts API"
sed '/- Smart Contracts API:/,$d' docs-repo/mkdocs.yml > docs-repo/mkdocs.yml.tmp
# Now list all files
echo "    - Smart Contracts API:" >> docs-repo/mkdocs.yml.tmp
echo "      - apis/smart-contracts/index.md" >> docs-repo/mkdocs.yml.tmp
for f in $contracts;
do
    echo "      - apis/smart-contracts/$(basename $f)" >> docs-repo/mkdocs.yml.tmp
done
mv docs-repo/mkdocs.yml.tmp docs-repo/mkdocs.yml

# Copy all pages to the docs repo
for f in $contracts;
do
    cp $f $docs
done

# Commit and push changes
# If there are no changes, nothing will be committed nor pushed.
cd docs-repo
git add docs/apis/smart-contracts
git add mkdocs.yml
git commit -m "Sync API ref docs with smart contracts commit $sc_commit"
git push
cd ..
rm -rf docs-repo
cd ../..
